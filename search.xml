<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown 使用语法</title>
      <link href="/2021/07/17/Markdown-%E4%BD%BF%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/07/17/Markdown-%E4%BD%BF%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-什么是-Markdown"><a href="#1-什么是-Markdown" class="headerlink" title="1. 什么是 Markdown?"></a>1. 什么是 Markdown?</h2><p>Markdown 是一种轻量级的标记语言。它允许人们使用易读易写的纯文本格式编写文档，并支持图片、图表、数学公式等，然后转换成有效的 HTML 文档。 <a href="https://github.github.com/gfm/">GitHub Flavored Markdown</a> 语法（简称 GFM），下面我们来熟悉下常用标记说明。 </p><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><p>一级标题在行首使用一个<code>#</code>，二级标题使用两个<code>##</code>，以此类推。如下：</p><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><h2 id="3-样式"><a href="#3-样式" class="headerlink" title="3.样式"></a>3.样式</h2><ul><li><code>**粗体**</code>用于表示<strong>粗体</strong></li><li><code>*斜体*</code>用于表示<em>斜体</em></li><li><code>~~删除线~~</code>用于表示<del>删除线</del></li></ul><h2 id="4-脚注"><a href="#4-脚注" class="headerlink" title="4.脚注"></a>4.脚注</h2><p>我们可以在这里插入一个脚注 <a href="%E8%BF%99%E6%98%AF%E8%84%9A%E6%B3%A8%E5%86%85%E5%AE%B9%E3%80%82">^footnote</a>。</p><h2 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a>5.引用</h2><pre><code>&gt; 这是一个引用</code></pre><p>效果：</p><blockquote><p>这是一个引用</p></blockquote><h2 id="6-链接"><a href="#6-链接" class="headerlink" title="6.链接"></a>6.链接</h2><h3 id="6-1-普通链接"><a href="#6-1-普通链接" class="headerlink" title="6.1 普通链接"></a>6.1 普通链接</h3><pre><code>[链接标题](https://KunkunTech.gitHub.io)</code></pre><p>输出：<a href="https://kunkuntech.github.io/">Kunkun’s Secrets</a></p><h3 id="6-2-图片"><a href="#6-2-图片" class="headerlink" title="6.2 图片"></a>6.2 图片</h3><p>如果想要显示一张网络图片，方式和普通链接类似，但需要在前面加一个<code>!</code>符号。</p><pre><code>![图片标题](http://KunkunTech.github.io/medias/logo.png)</code></pre><p>效果如下：<br><img src="http://kunkuntech.github.io/medias/logo.png" alt="博客Logo"></p><h3 id="6-3-视频"><a href="#6-3-视频" class="headerlink" title="6.3 视频"></a>6.3 视频</h3><pre><code>&lt;iframe src="//player.bilibili.com/player.html?aid=758851886&amp;bvid=BV1264y197xT&amp;cid=357685557&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt;</code></pre><p>效果如下：</p><iframe src="//player.bilibili.com/player.html?aid=758851886&amp;bvid=BV1264y197xT&amp;cid=357685557&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h2><p>通过下面的标记，就可以输出一份表格</p><pre><code>| 标题1 | 标题2 | 标题3 ||------|-------|------|| 内容1 | 内容2 | 内容3 || 内容4 | 内容5 | 内容6 |</code></pre><p>输出表格：</p><table><thead><tr><th>标题1</th><th>标题2</th><th>标题3</th></tr></thead><tbody><tr><td>内容1</td><td>内容2</td><td>内容3</td></tr><tr><td>内容4</td><td>内容5</td><td>内容6</td></tr></tbody></table><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><h3 id="8-1-有序列表"><a href="#8-1-有序列表" class="headerlink" title="8.1 有序列表"></a>8.1 有序列表</h3><pre><code>1. 第一项2. 第二项</code></pre><p>输出结果：</p><ol><li>第一项</li><li>第二项</li></ol><h3 id="8-2-无序列表"><a href="#8-2-无序列表" class="headerlink" title="8.2 无序列表"></a>8.2 无序列表</h3><p><code>+</code>、<code>*</code>、<code>-</code>都可以用来标识无序列表项。例如：</p><pre><code>+ 项目1* 项目2- 项目3</code></pre><p>输出结果：</p><ul><li>项目1</li></ul><ul><li>项目2</li></ul><ul><li>项目3</li></ul><h3 id="8-3-TODO-标记"><a href="#8-3-TODO-标记" class="headerlink" title="8.3 TODO 标记"></a>8.3 TODO 标记</h3><pre><code>- [ ] 未完成- [X] 已完成</code></pre><p>输出结果：</p><ul><li><input disabled="" type="checkbox"> 未完成</li><li><input checked="" disabled="" type="checkbox"> 已完成</li></ul><h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9.代码"></a>9.代码</h2><p>代码高亮：</p><h3 id="9-1-Go"><a href="#9-1-Go" class="headerlink" title="9.1 Go"></a>9.1 Go</h3><pre><code>go   func Fibonacci(n int) int {       if n &lt;= 1 {           return n       }       return Fibonacci(n-1) + Fibonacci(n-2)   }</code></pre><p>输出：</p><pre class="line-numbers language-go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> n    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>n<span class="token number">-2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-2-JavaScript"><a href="#9-2-JavaScript" class="headerlink" title="9.2 JavaScript"></a>9.2 JavaScript</h3><pre><code>```javascriptfunction Fibonacci(num) {    if (num &lt;= 1) return 1;    return Fibonacci(num - 1) + Fibonacci(num - 2);}```</code></pre><p>输出：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-3-Lua"><a href="#9-3-Lua" class="headerlink" title="9.3 Lua"></a>9.3 Lua</h3><pre><code>```lualocal function Fibonacci(n)    local function doFibonacci(n, ret1, ret2)        if (n &lt;= 1) then            return ret2        end        return doFibonacci(n - 1, ret2, ret1 + ret2)    end    return doFibonacci(n, 1, 1)end```</code></pre><p>输出：</p><pre class="line-numbers language-lua"><code class="language-lua"><span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">doFibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> ret1<span class="token punctuation">,</span> ret2<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">then</span>            <span class="token keyword">return</span> ret2        <span class="token keyword">end</span>        <span class="token keyword">return</span> <span class="token function">doFibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> ret2<span class="token punctuation">,</span> ret1 <span class="token operator">+</span> ret2<span class="token punctuation">)</span>    <span class="token keyword">end</span>    <span class="token keyword">return</span> <span class="token function">doFibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-数学公式"><a href="#10-数学公式" class="headerlink" title="10.数学公式"></a>10.数学公式</h2><p>LaTeX 语法的数学公式，例如：</p><pre><code>$$f(x) = a x^2 + b x + c$$</code></pre><p>会输出一个抛物线方程</p><p>$$<br>f(x) = a x^2 + b x + c<br>$$</p><p>而下面这个表达式</p><pre><code>$$F(\omega)=\int_{-\infty}^{+\infty} {f(t)e^{-i\omega t}dt}$$</code></pre><p>会输出一个傅里叶变换积分方程</p><p>$$<br>F(\omega)=\int_{-\infty}^{+\infty} {f(t)e^{-i\omega t}dt}<br>$$</p><p>要输出矩阵也很简单，只需要</p><pre><code>$$\begin{bmatrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{bmatrix}$$</code></pre><p>便可得到想要的效果</p><p>$$<br>\begin{bmatrix}<br>1 &amp; x &amp; x^2 \<br>1 &amp; y &amp; y^2 \<br>1 &amp; z &amp; z^2 \<br>\end{bmatrix}<br>$$</p><p>公式也可以显示在行内。例如 <code>$f(x)=kx+b$</code> 就会输出 $f(x)=kx+b$，这是一个显示在行内的直线方程。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The First Secret</title>
      <link href="/2021/07/17/The-First-Secret/"/>
      <url>/2021/07/17/The-First-Secret/</url>
      
        <content type="html"><![CDATA[<p>我嫉妒你身边无关紧要的人<br>因为他们轻而易举就能看见我朝思暮想的你</p><p>你错过的别人才会得到<br>正如你得到的都是别人错过的<br>别羡慕别人拥有的<br>你用的正是别人<strong>羡慕</strong>的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello!</title>
      <link href="/2021/07/15/Hello/"/>
      <url>/2021/07/15/Hello/</url>
      
        <content type="html"><![CDATA[<p>Hello! I’m Kunkun who is new here.<br>I’ve tried to make this website for myself. And I wanna know how I will use it. Let’s see.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
